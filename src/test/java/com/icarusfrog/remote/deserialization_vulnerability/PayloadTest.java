package com.icarusfrog.remote.deserialization_vulnerability;

import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.*;

@Slf4j
class PayloadTest {

    public static final String TEMP_FILE_PATH = "./temp.ser";

    @Test
    void verifyPayloadRunsOnConstruction() {
        Payload payload = new Payload();
        Assertions.assertTrue(true);
    }

    @Test
    void verifyPayloadRunsOnDeserialization() throws IOException, ClassNotFoundException {
        // create a new payload object
        log.info("Creating original payload");
        Payload payload = new Payload("original payload to serialize");

        // serialize the payload object
        FileOutputStream fos = new FileOutputStream(TEMP_FILE_PATH, false);
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(fos);
        objectOutputStream.writeObject(payload);;
        objectOutputStream.close();

        // deserialize the payload object
        FileInputStream fis = new FileInputStream(TEMP_FILE_PATH);
        ObjectInputStream ois = new ObjectInputStream(fis);

        log.info("Deserializing original payload");
        Payload deserializedPayload = (Payload) ois.readObject();

        Assertions.assertTrue(true,"Verify that the payload is executed on deserialization");
    }

}